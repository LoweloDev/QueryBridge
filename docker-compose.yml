version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: querybridge-postgres
    environment:
      POSTGRES_DB: querybridge_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/data/postgresql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: querybridge-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: analytics
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/data/mongodb-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis Stack (includes RedisSearch, RedisJSON, RedisGraph)
  redis:
    image: redis/redis-stack:latest
    container_name: querybridge-redis
    ports:
      - "6379:6379" # Redis
      - "8001:8001" # RedisInsight web UI
    volumes:
      - redis_data:/data
    environment:
      REDIS_ARGS: "--save 60 1 --loglevel warning"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # DynamoDB Local
  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: querybridge-dynamodb
    ports:
      - "8000:8000"
    command: [ "-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory" ]
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: querybridge-elasticsearch
    environment:
      - cluster.name=querybridge-cluster
      - node.name=querybridge-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - xpack.ml.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Kibana (Elasticsearch UI)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: querybridge-kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  elasticsearch_data:


networks:
  default:
    name: querybridge-network

version: '3.8'

services:
  # PostgreSQL - Primary database
  postgresql:
    image: postgres:16
    container_name: uqt-postgresql
    environment:
      POSTGRES_DB: querybridge_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./server/data/postgresql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d querybridge_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB - Document database
  mongodb:
    image: mongo:7
    container_name: uqt-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: analytics
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/data/mongodb-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Stack - Cache and search
  redis:
    image: redis/redis-stack:latest
    container_name: uqt-redis
    ports:
      - "6379:6379"
      - "8001:8001"  # RedisInsight UI
    volumes:
      - redis_data:/data
    command: redis-stack-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # DynamoDB Local
  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: uqt-dynamodb
    ports:
      - "8000:8000"
    volumes:
      - dynamodb_data:/home/dynamodblocal/data
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "/home/dynamodblocal/data"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # OpenSearch with SQL plugin (Elasticsearch alternative)
  opensearch:
    image: opensearchproject/opensearch:2.14.0
    container_name: uqt-opensearch
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # OpenSearch Secondary Instance (for multi-database scenarios)
  opensearch-secondary:
    image: opensearchproject/opensearch:2.14.0
    container_name: uqt-opensearch-secondary
    environment:
      - cluster.name=opensearch-cluster-secondary
      - node.name=opensearch-node2
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9201:9200"
      - "9301:9300"
    volumes:
      - opensearch_secondary_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgresql_data:
  mongodb_data:
  redis_data:
  dynamodb_data:
  opensearch_data:
  opensearch_secondary_data:

networks:
  default:
    name: uqt-network